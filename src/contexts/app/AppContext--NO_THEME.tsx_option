import { PropsWithChildren } from "react";
import { useGetLocale } from "@refinedev/core";
import { ConfigProvider, App as AntdApp } from "antd";
// import { StyleProvider } from '@ant-design/cssinjs';
import dayjs from 'dayjs';
import enUS from 'antd/locale/en_US';
import idID from 'antd/locale/id_ID';
import 'dayjs/locale/en';

const currentLang = localStorage.getItem("i18nextLng") || 'en';

dayjs.locale(currentLang); // Initial value for locale date

const AntLanguages: { [key: string]: any } = {
  id: idID,
  en: enUS,
};

const THEME = {
  token: {
    // fontFamily: "'Lato',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,'Noto Sans',sans-serif,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol','Noto Color Emoji'",
    // fontSize: 14,
    // lineHeight: 1.6, // default: 1.5714285714285714,
    // colorText: "",
    // colorLink: "#ff7a00",
    // colorPrimary: "#fbdd0b",
    // colorTextLightSolid: "#555",
    // colorTextBase: "#fff",
    // colorBgElevated: "#16085f",
    // colorBgLayout: "#f4f4f4", // #f5f5f5
    
    /** @DEV : ??? */
    // @ts-ignore
    zIndexPopupBase: 1055, // For Modal
    // borderRadius: 8, // 6
    // borderRadiusLG: 10, // 8
    // borderRadiusSM: 6, // 4
  },
  components: {
    // Button: {
    //   fontWeight: 600, // 500
    //   primaryColor: "#333",
    // },
    // Input: {
    //   activeShadow: "none",
    //   errorActiveShadow: "none",
    // },
    Menu: {
      algorithm: true, // Enable algorithm
      itemPaddingInline: 9, // Default: 16
      // itemSelectedColor: "#fb7800",
    },
    // Dropdown: {
    //   // zIndexPopup: 999,
    //   itemSelectedColor: "#fb7800", // NOT WORK
    // },
    // Select: {
    //   zIndexPopup: 999,
    // },
    Notification: {
      zIndexPopup: 2056, // 1060
    },
    // DatePicker: {
    //   zIndexPopup: 999,
    // },
    Table: {
      cellPaddingBlockSM: 5,
      // cellFontSizeSM: 13,
    },
  },
};

export const AppLocale = ({ children }: PropsWithChildren) => {
  const locale = useGetLocale();
  const currentLocale = locale();

  return (
    <ConfigProvider
      locale={AntLanguages[currentLocale || currentLang]}
    >
      {children}
    </ConfigProvider>
  );
}

export const AppContextProvider: React.FC<PropsWithChildren> = ({
  children,
}) => {
  return (
    <ConfigProvider 
      // wave={{
      //   disabled: true,
      // }}
      prefixCls="a" // Default = "ant" (NOTE: Change in scss / css files too)
      iconPrefixCls="ai" // Default = "anticon" (NOTE: Change in scss / css files too)
      // componentDisabled={true} // For disabled components: Button, Input, Checkbox, Dropdown Button,
      theme={THEME}
    >
      <AntdApp
        notification={{ bottom: 0 }}
      >
        {children}
      </AntdApp>
    </ConfigProvider>
  );
}
